#AWS playbook
---
- hosts: localhost
  connection: local
  gather_facts: False

  vars:
      key_name: ansible
      region: us-east-1
      image: ami-03d315ad33b9d49c4
      id: "prometheus"
      sec_group: "{{ id }}-sec"

  tasks:
      - name: Facts
        block:
            - name: Get instances facts
              ec2_instance_info:
                  aws_access_key: "{{ ec2_access_key }}"
                  aws_secret_key: "{{ ec2_secret_key }}"
                  region: "{{ region }}"
              register: result

            - name: instance ID
              debug:
                  msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{item.public_dns_name}}"
              loop: "{{ result.instances }}"

        tags: always

      - name: Provision EC2 instances
        block:
            - name: Upload public key to AWS
              ec2_key:
                  name: "{{ key_name}}"
                  key_material: "{{ lookup('file', '/home/celudor/.ssh/{{key_name}}.pub')}}"
                  region: "{{region}}"
                  aws_access_key: "{{ec2_access_key}}"
                  aws_secret_key: "{{ec2_secret_key}}"
            - name: Create security group
              ec2_group:
                  name: "{{ sec_group }}"
                  description: "SG for app {{id}}"
                  vpc_id: vpc-052e1bd54be74daf9
                  region: "{{region}}"
                  aws_access_key: "{{ec2_access_key}}"
                  aws_secret_key: "{{ec2_secret_key}}"
                  rules:
                      - proto: tcp
                        ports:
                            - 22
                        cidr_ip: 0.0.0.0/0
                        rule_desc: allow all on ssh port
                      - proto: tcp
                        ports:
                            - 9090
                        cidr_ip: 0.0.0.0/0
                        rule_desc: allow all on prometheus port
              register: result_sec_group

            - name: Provision instance(s)
              ec2:
                  aws_access_key: "{{ec2_access_key}}"
                  aws_secret_key: "{{ec2_secret_key}}"
                  key_name: "{{ key_name}}"
                  id: "{{ id}}"
                  group_id: "{{result_sec_group.group_id}}"
                  image: "{{image}}"
                  instance_type: t2.micro
                  region: "{{region}}"
                  wait: true
                  count: 1
                  instance_tags:
                      Application: "{{id}}"
        tags: ['never', 'create_ec2']








